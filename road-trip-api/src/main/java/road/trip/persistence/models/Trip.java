package road.trip.persistence.models;

import com.fasterxml.jackson.annotation.JsonIgnore;
import lombok.*;
import org.hibernate.Hibernate;

import javax.persistence.*;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.List;
import java.util.Objects;

@Getter
@Setter
@ToString
@Entity
@AllArgsConstructor
@Table(name = Trip.TABLE_NAME)
@NoArgsConstructor
@Builder
public class Trip {
    public static final String TABLE_NAME = "TRIP";

    @Id
    @GeneratedValue(strategy= GenerationType.IDENTITY)
    Long id;

    String name;
    AdventureLevel adventureLevel;

    Double driveDuration;
    Double distance;

    Double rating;

    LocalDate startDate;
    LocalDate endDate;

    @ManyToOne(targetEntity = Location.class)
    Location start;

    @ManyToOne(targetEntity = Location.class)
    Location end;

    String playlistId; // generated by Spotify

    @OneToMany(fetch = FetchType.EAGER, mappedBy = "trip", targetEntity = Stop.class)
    @OrderBy("stop_order ASC")
    List<Stop> stops;

    @OneToMany(mappedBy = "trip")
    @ToString.Exclude
    @JsonIgnore
    List<Notification> notifications;

    @ManyToOne
    @JoinColumn(name = "user_id", nullable = false)
    User creator;

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || Hibernate.getClass(this) != Hibernate.getClass(o)) return false;
        Trip trip = (Trip) o;
        return id != null && Objects.equals(id, trip.id);
    }

    @Override
    public int hashCode() {
        return getClass().hashCode();
    }
}
